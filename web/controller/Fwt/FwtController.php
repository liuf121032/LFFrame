<?php/** * Created by PhpStorm. * User: liufeng * Date: 2019/9/6 * Time: 11:39 */namespace web\controller\Fwt;use web\controller\BaseController;use core\View;use Lcobucci\JWT\Builder;use Lcobucci\JWT\Signer\Hmac\Sha256;use Lcobucci\JWT\Parser;class FwtController extends BaseController{  protected $view;  public function __construct()  {    $this->view = new View();    parent::__construct();  }  public function index(){    echo time();  }  //添加生成token验证  使用jwt方法  public function test(){    $builder = new Builder();    $signer = new Sha256();    $secret = "keyWordLiuF";//    设置header和payload，以下的字段都可以自定义    $builder->setIssuer("www.baidu.com")    //设置发行人    ->setAudience("www.baidu.com")         //设置接收人    ->setId("abc",true)               //设置id    ->setIssuedAt(time())           //设置token生成时间    ->setExpiration(time()+3600)   //设置过期时间    ->setNotBefore(time()+5)      //当前时间在这个时间前，token不能使用    ->set('uid','userId_uuid1');        //给token设置一个id    $builder->sign($signer,$secret);  //对上面的信息使用sha256算法签名    $token = (string)$builder->getToken();    var_dump($token);    $this->parseToken($token);  }  public function parseToken($token){    $signer = new Sha256();    $secret = "keyWordLiuF";//    $token = isset($_SERVER['HTTP_AUTHORIZATION']) ? $_SERVER['HTTP_AUTHORIZATION'] : '';    if (!$token) {      header('HTTP/1.1 403 forbidden');      exit("Invalid token");    }    try {      //解析token      $parse = new Parser();      $parse = $parse->parse($token);      //验证token合法性      if (!$parse->verify($signer, $secret)) {        invalidToken('Invalid token');      }      //验证是否已经过期      if ($parse->isExpired()) {        invalidToken('Already expired');      }      //获取数据      pre($parse->getClaims());      pre($parse->getClaim('aud'));    } catch (Exception $e) {      //var_dump($e->getMessage());      invalidToken('Invalid token');    }  }}